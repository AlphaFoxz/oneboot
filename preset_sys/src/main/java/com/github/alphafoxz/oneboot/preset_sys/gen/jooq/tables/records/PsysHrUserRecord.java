/*
 * This file is generated by jOOQ.
 */
package com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.records;


import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.PsysHrUser;
import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.pojos.PsysHrUserPo;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.springframework.lang.NonNull;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsysHrUserRecord extends UpdatableRecordImpl<PsysHrUserRecord> implements Record6<Long, String, String, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>preset_sys.psys_hr_user.id</code>. 主键
     */
    public PsysHrUserRecord setId(@NonNull Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>preset_sys.psys_hr_user.id</code>. 主键
     */
    @NotNull
    @NonNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>preset_sys.psys_hr_user.username</code>. 用户名称
     */
    public PsysHrUserRecord setUsername(@NonNull String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>preset_sys.psys_hr_user.username</code>. 用户名称
     */
    @NotNull
    @Size(max = 50)
    @NonNull
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>preset_sys.psys_hr_user.password</code>. 密码
     */
    public PsysHrUserRecord setPassword(@NonNull String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>preset_sys.psys_hr_user.password</code>. 密码
     */
    @NotNull
    @Size(max = 64)
    @NonNull
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>preset_sys.psys_hr_user.salt</code>. 盐
     */
    public PsysHrUserRecord setSalt(@NonNull String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>preset_sys.psys_hr_user.salt</code>. 盐
     */
    @NotNull
    @Size(max = 4)
    @NonNull
    public String getSalt() {
        return (String) get(3);
    }

    /**
     * Setter for <code>preset_sys.psys_hr_user.nickname</code>. 昵称
     */
    public PsysHrUserRecord setNickname(@NonNull String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>preset_sys.psys_hr_user.nickname</code>. 昵称
     */
    @NotNull
    @Size(max = 50)
    @NonNull
    public String getNickname() {
        return (String) get(4);
    }

    /**
     * Setter for <code>preset_sys.psys_hr_user.subject_id</code>. 主体id
     */
    public PsysHrUserRecord setSubjectId(@NonNull Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>preset_sys.psys_hr_user.subject_id</code>. 主体id
     */
    @NotNull
    @NonNull
    public Long getSubjectId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Row6<Long, String, String, String, String, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    @NonNull
    public Row6<Long, String, String, String, String, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    @NonNull
    public Field<Long> field1() {
        return PsysHrUser.PSYS_HR_USER.ID;
    }

    @Override
    @NonNull
    public Field<String> field2() {
        return PsysHrUser.PSYS_HR_USER.USERNAME;
    }

    @Override
    @NonNull
    public Field<String> field3() {
        return PsysHrUser.PSYS_HR_USER.PASSWORD;
    }

    @Override
    @NonNull
    public Field<String> field4() {
        return PsysHrUser.PSYS_HR_USER.SALT;
    }

    @Override
    @NonNull
    public Field<String> field5() {
        return PsysHrUser.PSYS_HR_USER.NICKNAME;
    }

    @Override
    @NonNull
    public Field<Long> field6() {
        return PsysHrUser.PSYS_HR_USER.SUBJECT_ID;
    }

    @Override
    @NonNull
    public Long component1() {
        return getId();
    }

    @Override
    @NonNull
    public String component2() {
        return getUsername();
    }

    @Override
    @NonNull
    public String component3() {
        return getPassword();
    }

    @Override
    @NonNull
    public String component4() {
        return getSalt();
    }

    @Override
    @NonNull
    public String component5() {
        return getNickname();
    }

    @Override
    @NonNull
    public Long component6() {
        return getSubjectId();
    }

    @Override
    @NonNull
    public Long value1() {
        return getId();
    }

    @Override
    @NonNull
    public String value2() {
        return getUsername();
    }

    @Override
    @NonNull
    public String value3() {
        return getPassword();
    }

    @Override
    @NonNull
    public String value4() {
        return getSalt();
    }

    @Override
    @NonNull
    public String value5() {
        return getNickname();
    }

    @Override
    @NonNull
    public Long value6() {
        return getSubjectId();
    }

    @Override
    @NonNull
    public PsysHrUserRecord value1(@NonNull Long value) {
        setId(value);
        return this;
    }

    @Override
    @NonNull
    public PsysHrUserRecord value2(@NonNull String value) {
        setUsername(value);
        return this;
    }

    @Override
    @NonNull
    public PsysHrUserRecord value3(@NonNull String value) {
        setPassword(value);
        return this;
    }

    @Override
    @NonNull
    public PsysHrUserRecord value4(@NonNull String value) {
        setSalt(value);
        return this;
    }

    @Override
    @NonNull
    public PsysHrUserRecord value5(@NonNull String value) {
        setNickname(value);
        return this;
    }

    @Override
    @NonNull
    public PsysHrUserRecord value6(@NonNull Long value) {
        setSubjectId(value);
        return this;
    }

    @Override
    @NonNull
    public PsysHrUserRecord values(@NonNull Long value1, @NonNull String value2, @NonNull String value3, @NonNull String value4, @NonNull String value5, @NonNull Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PsysHrUserRecord
     */
    public PsysHrUserRecord() {
        super(PsysHrUser.PSYS_HR_USER);
    }

    /**
     * Create a detached, initialised PsysHrUserRecord
     */
    public PsysHrUserRecord(@NonNull Long id, @NonNull String username, @NonNull String password, @NonNull String salt, @NonNull String nickname, @NonNull Long subjectId) {
        super(PsysHrUser.PSYS_HR_USER);

        setId(id);
        setUsername(username);
        setPassword(password);
        setSalt(salt);
        setNickname(nickname);
        setSubjectId(subjectId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PsysHrUserRecord
     */
    public PsysHrUserRecord(PsysHrUserPo value) {
        super(PsysHrUser.PSYS_HR_USER);

        if (value != null) {
            setId(value.id());
            setUsername(value.username());
            setPassword(value.password());
            setSalt(value.salt());
            setNickname(value.nickname());
            setSubjectId(value.subjectId());
            resetChangedOnNotNull();
        }
    }
}
