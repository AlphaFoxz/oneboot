/*
 * This file is generated by jOOQ.
 */
package com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables;


import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.PresetSys;
import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.records.PsysTokenRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.springframework.lang.NonNull;
import org.springframework.lang.Nullable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsysToken extends TableImpl<PsysTokenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>preset_sys.psys_token</code>
     */
    public static final PsysToken PSYS_TOKEN = new PsysToken();

    /**
     * The class holding records for this type
     */
    @Override
    @NonNull
    public Class<PsysTokenRecord> getRecordType() {
        return PsysTokenRecord.class;
    }

    private PsysToken(Name alias, Table<PsysTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private PsysToken(Name alias, Table<PsysTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>preset_sys.psys_token</code> table reference
     */
    public PsysToken(String alias) {
        this(DSL.name(alias), PSYS_TOKEN);
    }

    /**
     * Create an aliased <code>preset_sys.psys_token</code> table reference
     */
    public PsysToken(Name alias) {
        this(alias, PSYS_TOKEN);
    }

    /**
     * Create a <code>preset_sys.psys_token</code> table reference
     */
    public PsysToken() {
        this(DSL.name("psys_token"), null);
    }

    public <O extends Record> PsysToken(Table<O> child, ForeignKey<O, PsysTokenRecord> key) {
        super(child, key, PSYS_TOKEN);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PresetSys.PRESET_SYS;
    }

    @Override
    @NonNull
    public PsysToken as(String alias) {
        return new PsysToken(DSL.name(alias), this);
    }

    @Override
    @NonNull
    public PsysToken as(Name alias) {
        return new PsysToken(alias, this);
    }

    @Override
    @NonNull
    public PsysToken as(Table<?> alias) {
        return new PsysToken(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysToken rename(String name) {
        return new PsysToken(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysToken rename(Name name) {
        return new PsysToken(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysToken rename(Table<?> name) {
        return new PsysToken(name.getQualifiedName(), null);
    }
}
