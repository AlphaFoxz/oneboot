/*
 * This file is generated by jOOQ.
 */
package com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables;


import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.PresetSys;
import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.records.PsysAuthTokenRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.springframework.lang.NonNull;
import org.springframework.lang.Nullable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsysAuthToken extends TableImpl<PsysAuthTokenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>preset_sys.psys_auth_token</code>
     */
    public static final PsysAuthToken PSYS_AUTH_TOKEN = new PsysAuthToken();

    /**
     * The class holding records for this type
     */
    @Override
    @NonNull
    public Class<PsysAuthTokenRecord> getRecordType() {
        return PsysAuthTokenRecord.class;
    }

    private PsysAuthToken(Name alias, Table<PsysAuthTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private PsysAuthToken(Name alias, Table<PsysAuthTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>preset_sys.psys_auth_token</code> table reference
     */
    public PsysAuthToken(String alias) {
        this(DSL.name(alias), PSYS_AUTH_TOKEN);
    }

    /**
     * Create an aliased <code>preset_sys.psys_auth_token</code> table reference
     */
    public PsysAuthToken(Name alias) {
        this(alias, PSYS_AUTH_TOKEN);
    }

    /**
     * Create a <code>preset_sys.psys_auth_token</code> table reference
     */
    public PsysAuthToken() {
        this(DSL.name("psys_auth_token"), null);
    }

    public <O extends Record> PsysAuthToken(Table<O> child, ForeignKey<O, PsysAuthTokenRecord> key) {
        super(child, key, PSYS_AUTH_TOKEN);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PresetSys.PRESET_SYS;
    }

    @Override
    @NonNull
    public PsysAuthToken as(String alias) {
        return new PsysAuthToken(DSL.name(alias), this);
    }

    @Override
    @NonNull
    public PsysAuthToken as(Name alias) {
        return new PsysAuthToken(alias, this);
    }

    @Override
    @NonNull
    public PsysAuthToken as(Table<?> alias) {
        return new PsysAuthToken(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysAuthToken rename(String name) {
        return new PsysAuthToken(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysAuthToken rename(Name name) {
        return new PsysAuthToken(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysAuthToken rename(Table<?> name) {
        return new PsysAuthToken(name.getQualifiedName(), null);
    }
}
