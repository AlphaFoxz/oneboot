/*
 * This file is generated by jOOQ.
 */
package com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables;


import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.Keys;
import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.PresetSys;
import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.records.PsysAbacGroupRecord;

import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function3;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.springframework.lang.NonNull;
import org.springframework.lang.Nullable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsysAbacGroup extends TableImpl<PsysAbacGroupRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>preset_sys.psys_abac_group</code>
     */
    public static final PsysAbacGroup PSYS_ABAC_GROUP = new PsysAbacGroup();

    /**
     * The class holding records for this type
     */
    @Override
    @NonNull
    public Class<PsysAbacGroupRecord> getRecordType() {
        return PsysAbacGroupRecord.class;
    }

    /**
     * The column <code>preset_sys.psys_abac_group.id</code>. 主键
     */
    public final TableField<PsysAbacGroupRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "主键");

    /**
     * The column <code>preset_sys.psys_abac_group.group_attr_set</code>. 组标签集合
     */
    public final TableField<PsysAbacGroupRecord, String> GROUP_ATTR_SET = createField(DSL.name("group_attr_set"), SQLDataType.VARCHAR.nullable(false), this, "组标签集合");

    /**
     * The column <code>preset_sys.psys_abac_group.business_id</code>. 业务id
     */
    public final TableField<PsysAbacGroupRecord, Long> BUSINESS_ID = createField(DSL.name("business_id"), SQLDataType.BIGINT.nullable(false), this, "业务id");

    private PsysAbacGroup(Name alias, Table<PsysAbacGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private PsysAbacGroup(Name alias, Table<PsysAbacGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>preset_sys.psys_abac_group</code> table reference
     */
    public PsysAbacGroup(String alias) {
        this(DSL.name(alias), PSYS_ABAC_GROUP);
    }

    /**
     * Create an aliased <code>preset_sys.psys_abac_group</code> table reference
     */
    public PsysAbacGroup(Name alias) {
        this(alias, PSYS_ABAC_GROUP);
    }

    /**
     * Create a <code>preset_sys.psys_abac_group</code> table reference
     */
    public PsysAbacGroup() {
        this(DSL.name("psys_abac_group"), null);
    }

    public <O extends Record> PsysAbacGroup(Table<O> child, ForeignKey<O, PsysAbacGroupRecord> key) {
        super(child, key, PSYS_ABAC_GROUP);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PresetSys.PRESET_SYS;
    }

    @Override
    @NonNull
    public UniqueKey<PsysAbacGroupRecord> getPrimaryKey() {
        return Keys.PSYS_ABAC_GROUP_PK;
    }

    @Override
    @NonNull
    public PsysAbacGroup as(String alias) {
        return new PsysAbacGroup(DSL.name(alias), this);
    }

    @Override
    @NonNull
    public PsysAbacGroup as(Name alias) {
        return new PsysAbacGroup(alias, this);
    }

    @Override
    @NonNull
    public PsysAbacGroup as(Table<?> alias) {
        return new PsysAbacGroup(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysAbacGroup rename(String name) {
        return new PsysAbacGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysAbacGroup rename(Name name) {
        return new PsysAbacGroup(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    @NonNull
    public PsysAbacGroup rename(Table<?> name) {
        return new PsysAbacGroup(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    @NonNull
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function3<? super Long, ? super String, ? super Long, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function3<? super Long, ? super String, ? super Long, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
