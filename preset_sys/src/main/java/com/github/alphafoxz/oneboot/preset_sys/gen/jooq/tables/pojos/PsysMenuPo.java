/*
 * This file is generated by jOOQ.
 */
package com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.pojos;


import java.io.Serializable;

import org.springframework.lang.NonNull;
import org.springframework.lang.Nullable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public record PsysMenuPo(
    @NonNull Long id,
    @NonNull String menuName,
    @Nullable String uriRoute,
    @Nullable String componentRoute,
    @NonNull String authValues,
    @NonNull Integer sort,
    @NonNull String type,
    @Nullable String redirectUri,
    @Nullable String icon,
    @Nullable String linkAddress,
    @NonNull Boolean hidden,
    @NonNull Boolean cached,
    @NonNull Boolean pinned,
    @NonNull Boolean outerLink,
    @NonNull Boolean embed
) implements Serializable {

    private static final long serialVersionUID = 1L;


    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PsysMenuPo other = (PsysMenuPo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.menuName == null) {
            if (other.menuName != null)
                return false;
        }
        else if (!this.menuName.equals(other.menuName))
            return false;
        if (this.uriRoute == null) {
            if (other.uriRoute != null)
                return false;
        }
        else if (!this.uriRoute.equals(other.uriRoute))
            return false;
        if (this.componentRoute == null) {
            if (other.componentRoute != null)
                return false;
        }
        else if (!this.componentRoute.equals(other.componentRoute))
            return false;
        if (this.authValues == null) {
            if (other.authValues != null)
                return false;
        }
        else if (!this.authValues.equals(other.authValues))
            return false;
        if (this.sort == null) {
            if (other.sort != null)
                return false;
        }
        else if (!this.sort.equals(other.sort))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.redirectUri == null) {
            if (other.redirectUri != null)
                return false;
        }
        else if (!this.redirectUri.equals(other.redirectUri))
            return false;
        if (this.icon == null) {
            if (other.icon != null)
                return false;
        }
        else if (!this.icon.equals(other.icon))
            return false;
        if (this.linkAddress == null) {
            if (other.linkAddress != null)
                return false;
        }
        else if (!this.linkAddress.equals(other.linkAddress))
            return false;
        if (this.hidden == null) {
            if (other.hidden != null)
                return false;
        }
        else if (!this.hidden.equals(other.hidden))
            return false;
        if (this.cached == null) {
            if (other.cached != null)
                return false;
        }
        else if (!this.cached.equals(other.cached))
            return false;
        if (this.pinned == null) {
            if (other.pinned != null)
                return false;
        }
        else if (!this.pinned.equals(other.pinned))
            return false;
        if (this.outerLink == null) {
            if (other.outerLink != null)
                return false;
        }
        else if (!this.outerLink.equals(other.outerLink))
            return false;
        if (this.embed == null) {
            if (other.embed != null)
                return false;
        }
        else if (!this.embed.equals(other.embed))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.menuName == null) ? 0 : this.menuName.hashCode());
        result = prime * result + ((this.uriRoute == null) ? 0 : this.uriRoute.hashCode());
        result = prime * result + ((this.componentRoute == null) ? 0 : this.componentRoute.hashCode());
        result = prime * result + ((this.authValues == null) ? 0 : this.authValues.hashCode());
        result = prime * result + ((this.sort == null) ? 0 : this.sort.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.redirectUri == null) ? 0 : this.redirectUri.hashCode());
        result = prime * result + ((this.icon == null) ? 0 : this.icon.hashCode());
        result = prime * result + ((this.linkAddress == null) ? 0 : this.linkAddress.hashCode());
        result = prime * result + ((this.hidden == null) ? 0 : this.hidden.hashCode());
        result = prime * result + ((this.cached == null) ? 0 : this.cached.hashCode());
        result = prime * result + ((this.pinned == null) ? 0 : this.pinned.hashCode());
        result = prime * result + ((this.outerLink == null) ? 0 : this.outerLink.hashCode());
        result = prime * result + ((this.embed == null) ? 0 : this.embed.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PsysMenuPo (");

        sb.append(id);
        sb.append(", ").append(menuName);
        sb.append(", ").append(uriRoute);
        sb.append(", ").append(componentRoute);
        sb.append(", ").append(authValues);
        sb.append(", ").append(sort);
        sb.append(", ").append(type);
        sb.append(", ").append(redirectUri);
        sb.append(", ").append(icon);
        sb.append(", ").append(linkAddress);
        sb.append(", ").append(hidden);
        sb.append(", ").append(cached);
        sb.append(", ").append(pinned);
        sb.append(", ").append(outerLink);
        sb.append(", ").append(embed);

        sb.append(")");
        return sb.toString();
    }
}
