/*
 * This file is generated by jOOQ.
 */
package com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.records;


import com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.PsysToken;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;

import java.time.OffsetDateTime;

import org.jooq.impl.TableRecordImpl;


/**
 * The table <code>preset_sys.psys_token</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PsysTokenRecord extends TableRecordImpl<PsysTokenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>preset_sys.psys_token.id</code>. 主键
     */
    public void setId(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>preset_sys.psys_token.id</code>. 主键
     */
    @Nullable
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>preset_sys.psys_token.access_token</code>. 访问令牌
     */
    public void setAccessToken(@Nonnull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>preset_sys.psys_token.access_token</code>. 访问令牌
     */
    @Nonnull
    public String getAccessToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>preset_sys.psys_token.refresh_token</code>. 刷新令牌
     */
    public void setRefreshToken(@Nonnull String value) {
        set(2, value);
    }

    /**
     * Getter for <code>preset_sys.psys_token.refresh_token</code>. 刷新令牌
     */
    @Nonnull
    public String getRefreshToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>preset_sys.psys_token.create_time</code>. 创建时间
     */
    public void setCreateTime(@Nonnull OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>preset_sys.psys_token.create_time</code>. 创建时间
     */
    @Nonnull
    public OffsetDateTime getCreateTime() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>preset_sys.psys_token.subject_id</code>. 主体id（用户id）
     */
    public void setSubjectId(@Nonnull Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>preset_sys.psys_token.subject_id</code>. 主体id（用户id）
     */
    @Nonnull
    public Long getSubjectId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>preset_sys.psys_token.expire_time</code>. 过期时间
     */
    public void setExpireTime(@Nonnull OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>preset_sys.psys_token.expire_time</code>. 过期时间
     */
    @Nonnull
    public OffsetDateTime getExpireTime() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PsysTokenRecord
     */
    public PsysTokenRecord() {
        super(PsysToken.PSYS_TOKEN);
    }

    /**
     * Create a detached, initialised PsysTokenRecord
     */
    public PsysTokenRecord(@Nullable Long id, @Nonnull String accessToken, @Nonnull String refreshToken, @Nonnull OffsetDateTime createTime, @Nonnull Long subjectId, @Nonnull OffsetDateTime expireTime) {
        super(PsysToken.PSYS_TOKEN);

        setId(id);
        setAccessToken(accessToken);
        setRefreshToken(refreshToken);
        setCreateTime(createTime);
        setSubjectId(subjectId);
        setExpireTime(expireTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PsysTokenRecord
     */
    public PsysTokenRecord(com.github.alphafoxz.oneboot.preset_sys.gen.jooq.tables.pojos.PsysToken value) {
        super(PsysToken.PSYS_TOKEN);

        if (value != null) {
            setId(value.id());
            setAccessToken(value.accessToken());
            setRefreshToken(value.refreshToken());
            setCreateTime(value.createTime());
            setSubjectId(value.subjectId());
            setExpireTime(value.expireTime());
            resetChangedOnNotNull();
        }
    }
}
