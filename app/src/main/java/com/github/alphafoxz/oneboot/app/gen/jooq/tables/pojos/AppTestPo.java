/*
 * This file is generated by jOOQ.
 */
package com.github.alphafoxz.oneboot.app.gen.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.OffsetDateTime;
import java.time.OffsetTime;

import org.springframework.lang.NonNull;
import org.springframework.lang.Nullable;


/**
 * 测试表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public record AppTestPo(
    @NonNull Long id,
    @Nullable String testJson,
    @Nullable LocalDate testDate,
    @Nullable LocalDateTime testTimestamp,
    @Nullable Boolean testBool,
    @Nullable Double testDouble,
    @Nullable Float testFloat,
    @Nullable OffsetDateTime testTimestamptz,
    @Nullable LocalTime testTime,
    @Nullable OffsetTime testTimetz,
    @Nullable Object testDaterange,
    @Nullable String testVarchar50
) implements Serializable {

    private static final long serialVersionUID = 1L;


    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AppTestPo other = (AppTestPo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.testJson == null) {
            if (other.testJson != null)
                return false;
        }
        else if (!this.testJson.equals(other.testJson))
            return false;
        if (this.testDate == null) {
            if (other.testDate != null)
                return false;
        }
        else if (!this.testDate.equals(other.testDate))
            return false;
        if (this.testTimestamp == null) {
            if (other.testTimestamp != null)
                return false;
        }
        else if (!this.testTimestamp.equals(other.testTimestamp))
            return false;
        if (this.testBool == null) {
            if (other.testBool != null)
                return false;
        }
        else if (!this.testBool.equals(other.testBool))
            return false;
        if (this.testDouble == null) {
            if (other.testDouble != null)
                return false;
        }
        else if (!this.testDouble.equals(other.testDouble))
            return false;
        if (this.testFloat == null) {
            if (other.testFloat != null)
                return false;
        }
        else if (!this.testFloat.equals(other.testFloat))
            return false;
        if (this.testTimestamptz == null) {
            if (other.testTimestamptz != null)
                return false;
        }
        else if (!this.testTimestamptz.equals(other.testTimestamptz))
            return false;
        if (this.testTime == null) {
            if (other.testTime != null)
                return false;
        }
        else if (!this.testTime.equals(other.testTime))
            return false;
        if (this.testTimetz == null) {
            if (other.testTimetz != null)
                return false;
        }
        else if (!this.testTimetz.equals(other.testTimetz))
            return false;
        if (this.testDaterange == null) {
            if (other.testDaterange != null)
                return false;
        }
        else if (!this.testDaterange.equals(other.testDaterange))
            return false;
        if (this.testVarchar50 == null) {
            if (other.testVarchar50 != null)
                return false;
        }
        else if (!this.testVarchar50.equals(other.testVarchar50))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.testJson == null) ? 0 : this.testJson.hashCode());
        result = prime * result + ((this.testDate == null) ? 0 : this.testDate.hashCode());
        result = prime * result + ((this.testTimestamp == null) ? 0 : this.testTimestamp.hashCode());
        result = prime * result + ((this.testBool == null) ? 0 : this.testBool.hashCode());
        result = prime * result + ((this.testDouble == null) ? 0 : this.testDouble.hashCode());
        result = prime * result + ((this.testFloat == null) ? 0 : this.testFloat.hashCode());
        result = prime * result + ((this.testTimestamptz == null) ? 0 : this.testTimestamptz.hashCode());
        result = prime * result + ((this.testTime == null) ? 0 : this.testTime.hashCode());
        result = prime * result + ((this.testTimetz == null) ? 0 : this.testTimetz.hashCode());
        result = prime * result + ((this.testDaterange == null) ? 0 : this.testDaterange.hashCode());
        result = prime * result + ((this.testVarchar50 == null) ? 0 : this.testVarchar50.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AppTestPo (");

        sb.append(id);
        sb.append(", ").append(testJson);
        sb.append(", ").append(testDate);
        sb.append(", ").append(testTimestamp);
        sb.append(", ").append(testBool);
        sb.append(", ").append(testDouble);
        sb.append(", ").append(testFloat);
        sb.append(", ").append(testTimestamptz);
        sb.append(", ").append(testTime);
        sb.append(", ").append(testTimetz);
        sb.append(", ").append(testDaterange);
        sb.append(", ").append(testVarchar50);

        sb.append(")");
        return sb.toString();
    }
}
